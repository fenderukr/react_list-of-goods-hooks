{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","reverse","App","useState","setIsReversed","NONE","setSortType","isInitialState","className","type","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,4DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,OACb,MACF,KAAKR,EAASS,OACZH,EAAaE,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU7C,OAJIP,GACFC,EAAaO,UAGRP,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMc,EAAgB,WAC3B,MAAoCC,oBAAkB,GAAtD,mBAAOV,EAAP,KAAmBW,EAAnB,KACA,EAAgCD,mBAAmBf,EAASiB,MAA5D,mBAAOb,EAAP,KAAiBc,EAAjB,KAEMC,GAAkBd,GAAcD,IAAaJ,EAASiB,KAmB5D,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEhB,IAAaJ,EAASO,SAClB,iBACA,0BAENe,QAvBe,WACrBJ,EAAYlB,EAASO,WAejB,iCAYA,wBACEc,KAAK,SACLD,UACEhB,IAAaJ,EAASS,OAClB,oBACA,6BAENa,QA/Ba,WACnBJ,EAAYlB,EAASS,SAuBjB,4BAYA,wBACEY,KAAK,SACLD,UACEf,EACI,oBACA,6BAENiB,QAnDQ,WACdN,GAAc,SAACO,GAAD,OAAYA,MA2CtB,sBAYEJ,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAhDI,WACZN,GAAc,GACdE,EAAYlB,EAASiB,OA2Cf,sBAUJ,6BACE,6BACGf,EAAkBD,EAAiB,CAAEG,WAAUC,eAAcmB,KAC5D,SAACC,GAAD,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIA,cChIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2f101864.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport React, { useState } from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const isInitialState = !isReversed && sortType === SortType.NONE;\n\n  const reverse = () => {\n    setIsReversed((state) => !state);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'\n          }\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          }\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {!isInitialState && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed }).map(\n            (good) => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ),\n          )}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}